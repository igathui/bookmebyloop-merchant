// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String
  firstName   String?
  lastName    String?
  phoneNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Business {
  id           String        @id @default(cuid())
  name         String
  email        String        @unique
  phone        String
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  BusinessInfo BusinessInfo?
}

model BusinessInfo {
  id          String    @id @default(cuid())
  businessId  String    @unique
  business    Business  @relation(fields: [businessId], references: [id], onDelete: Cascade)
  description String
  location    String
  tillNumber  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  services    Service[] // <-- Relates many services to one BusinessInfo
}

model Service {
  id             String       @id @default(cuid())
  businessInfoId String // <-- Foreign key to BusinessInfo
  businessInfo   BusinessInfo @relation(fields: [businessInfoId], references: [id], onDelete: Cascade)
  name           String
  rate           Float
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index([businessInfoId])
}
